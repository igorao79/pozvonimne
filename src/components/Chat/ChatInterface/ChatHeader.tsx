import React, { useState, useEffect } from 'react'
import { Chat } from './types'
import { TypingIndicator } from '../TypingIndicator'
import useCallStore from '@/store/useCallStore'

interface ChatHeaderProps {
  chat: Chat
  onBack: () => void
  onCall?: () => void
  onCancel?: () => void
  userStatus?: string
  isInCall?: boolean
  typingUsers?: string[]
  currentUserId?: string
}

export const ChatHeader: React.FC<ChatHeaderProps> = ({
  chat,
  onBack,
  onCall,
  onCancel,
  userStatus,
  isInCall = false,
  typingUsers = [],
  currentUserId
}) => {
  const { isCalling, targetUserId, endCall, error: callError, isInCall: isInCallStore } = useCallStore()
  const [callStatus, setCallStatus] = useState<'idle' | 'calling' | 'failed'>('idle')
  const [isCancelling, setIsCancelling] = useState(false)

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∑–≤–æ–Ω–∏–º –ª–∏ –º—ã —ç—Ç–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
  const isCallingThisUser = isCalling && targetUserId === chat.other_participant_id


  // –≠—Ñ—Ñ–µ–∫—Ç –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –∑–≤–æ–Ω–∫–∞
  useEffect(() => {
    if (isCallingThisUser) {
      setCallStatus('calling')
      setIsCancelling(false) // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ—Ç–º–µ–Ω—ã –ø—Ä–∏ –Ω–æ–≤–æ–º –∑–≤–æ–Ω–∫–µ
    }
    // –ù–ï –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∑–≤–æ–Ω–∫–∞ –∑–¥–µ—Å—å - —ç—Ç–æ –¥–µ–ª–∞–µ—Ç—Å—è –≤ –¥—Ä—É–≥–∏—Ö —ç—Ñ—Ñ–µ–∫—Ç–∞—Ö
  }, [isCallingThisUser])

  // –≠—Ñ—Ñ–µ–∫—Ç –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–∞–π–º–∞—É—Ç–∞ –∑–≤–æ–Ω–∫–∞ (–µ—Å–ª–∏ –∑–≤–æ–Ω–æ–∫ –¥–ª–∏—Ç—Å—è —Å–ª–∏—à–∫–æ–º –¥–æ–ª–≥–æ –±–µ–∑ –æ—Ç–≤–µ—Ç–∞)
  useEffect(() => {
    if (callStatus === 'calling') {
      const timeoutId = setTimeout(() => {
        // –ï—Å–ª–∏ —á–µ—Ä–µ–∑ 30 —Å–µ–∫—É–Ω–¥ –∑–≤–æ–Ω–æ–∫ –≤—Å–µ –µ—â–µ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ calling - —Å—á–∏—Ç–∞–µ–º –µ–≥–æ –Ω–µ—É–¥–∞—á–Ω—ã–º
        if (callStatus === 'calling') {
          console.log('üìû Call timeout - showing failed state')
          setIsCancelling(false) // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ—Ç–º–µ–Ω—ã –ø—Ä–∏ —Ç–∞–π–º–∞—É—Ç–µ
          setCallStatus('failed')
          setTimeout(() => {
            console.log('üìû Resetting call status to idle after timeout')
            setCallStatus('idle')
          }, 3000)
        }
      }, 30000) // 30 —Å–µ–∫—É–Ω–¥ —Ç–∞–π–º–∞—É—Ç

      return () => clearTimeout(timeoutId)
    }
  }, [callStatus])

  // –≠—Ñ—Ñ–µ–∫—Ç –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–≤–æ–Ω–∫–∞ –±–µ–∑ –æ—à–∏–±–∫–∏
  useEffect(() => {
    // –ï—Å–ª–∏ –º—ã –±—ã–ª–∏ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ calling, –Ω–æ —Ç–µ–ø–µ—Ä—å –Ω–µ –∑–≤–æ–Ω–∏–º –∏ –Ω–µ –≤ –∑–≤–æ–Ω–∫–µ
    if (callStatus === 'calling' && !isCalling && !isInCallStore) {
      console.log('üìû Call ended - immediately resetting to idle state')

      // –°—Ä–∞–∑—É —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –≤ idle –¥–ª—è –º–≥–Ω–æ–≤–µ–Ω–Ω–æ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ü–≤–µ—Ç–∞ –ø–ª–∞—à–∫–∏
      setCallStatus('idle')
      // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ—Ç–º–µ–Ω—ã —Å—Ä–∞–∑—É
      setIsCancelling(false)

      // –ù–µ –∂–¥–µ–º –æ—à–∏–±–∫–∏ - –ø–ª–∞—à–∫–∞ –¥–æ–ª–∂–Ω–∞ —Å—Ä–∞–∑—É —Å—Ç–∞—Ç—å —Å–µ—Ä–æ–π
    }
  }, [callStatus, isCalling, isInCallStore])

  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —ç—Ñ—Ñ–µ–∫—Ç –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏—è callError
  useEffect(() => {
    // –ï—Å–ª–∏ –ø—Ä–∏—à–ª–∞ –æ—à–∏–±–∫–∞ CALL_REJECTED_VISUAL - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫—Ä–∞—Å–Ω—É—é –ø–ª–∞—à–∫—É
    if (callError === 'CALL_REJECTED_VISUAL') {
      console.log('üìû Call rejection detected, showing red indicator for 3 seconds')
      setIsCancelling(false) // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ—Ç–º–µ–Ω—ã –ø—Ä–∏ –æ—à–∏–±–∫–µ
      setCallStatus('failed')
      // –ß–µ—Ä–µ–∑ 1 —Å–µ–∫—É–Ω–¥—É –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫ –¥–µ—Ñ–æ–ª—Ç–Ω–æ–º—É —Å–æ—Å—Ç–æ—è–Ω–∏—é
      const timeoutId = setTimeout(() => {
        console.log('üìû Resetting call status to idle after 1 second red indicator')
        setCallStatus('idle')
        setIsCancelling(false) // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ—Ç–º–µ–Ω—ã –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—Ç–µ –∫ idle
      }, 1000) // –£–º–µ–Ω—å—à–∞–µ–º –¥–æ 1 —Å–µ–∫—É–Ω–¥—ã

      return () => clearTimeout(timeoutId)
    }
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥—Ä—É–≥–∏—Ö –æ—à–∏–±–æ–∫
    else if (callError && callStatus === 'calling') {
      const shouldShowFailedState = callError.includes('–æ—Ç–∫–ª–æ–Ω–µ–Ω') ||
                                   callError.includes('–∑–∞–≤–µ—Ä—à–µ–Ω') ||
                                   callError.includes('–ù–µ —É–¥–∞–ª–æ—Å—å') ||
                                   callError.includes('–æ—Ç–º–µ–Ω–µ–Ω') ||
                                   callError.includes('cancelled')

      if (shouldShowFailedState) {
        console.log('üìû Call failed with other error, showing red indicator briefly')
        setCallStatus('failed')
        // –ö–æ—Ä–æ—Ç–∫–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –ø–æ–∫–∞–∑–∞ –∫—Ä–∞—Å–Ω–æ–π –ø–ª–∞—à–∫–∏, –∑–∞—Ç–µ–º —Å—Ä–∞–∑—É –≤ idle
        setTimeout(() => {
          setCallStatus('idle')
          setIsCancelling(false)
        }, 1000) // –£–º–µ–Ω—å—à–∞–µ–º –¥–æ 1 —Å–µ–∫—É–Ω–¥—ã
      }
    }
  }, [callError, callStatus])

  // –ì–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–±—Ä–æ—Å —Å—Ç–∞—Ç—É—Å–∞ failed —á–µ—Ä–µ–∑ 1.5 —Å–µ–∫—É–Ω–¥—ã (–¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏)
  useEffect(() => {
    if (callStatus === 'failed') {
      const safetyTimeoutId = setTimeout(() => {
        console.log('üìû Safety reset: ensuring call status returns to idle')
        setCallStatus('idle')
        setIsCancelling(false) // –ì–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è –æ—Ç–º–µ–Ω—ã –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—Ç–µ –∫ idle
      }, 1500) // –£–º–µ–Ω—å—à–∞–µ–º –¥–æ 1.5 —Å–µ–∫—É–Ω–¥

      return () => clearTimeout(safetyTimeoutId)
    }
  }, [callStatus])

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–º–µ–Ω—ã –∑–≤–æ–Ω–∫–∞
  const handleCancelCall = () => {
    // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –Ω–∞–∂–∞—Ç–∏—è
    if (isCancelling) {
      console.log('üìû Cancel button is already pressed, ignoring duplicate click')
      return
    }

    setIsCancelling(true)
    console.log('üìû HandleCancelCall: Starting call cancellation')

    if (onCancel) {
      onCancel()
    } else {
      // Fallback –µ—Å–ª–∏ onCancel –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω
      endCall()
    }

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –≤ idle —Å—Ä–∞–∑—É, —á—Ç–æ–±—ã –ø–ª–∞—à–∫–∞ –≤–µ—Ä–Ω—É–ª–∞—Å—å –∫ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–º—É —Å–æ—Å—Ç–æ—è–Ω–∏—é
    setCallStatus('idle')

    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º isCancelling —á–µ—Ä–µ–∑ –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É, —á—Ç–æ–±—ã –¥–∞—Ç—å –≤—Ä–µ–º—è –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—Ç–º–µ–Ω—ã
    setTimeout(() => {
      setIsCancelling(false)
      console.log('üìû Cancel button state reset after call cancellation')
    }, 1000)
  }
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–µ—á–∞—Ç–∞–µ—Ç –ª–∏ –∫—Ç–æ-—Ç–æ –∏–∑ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–æ–≤ (–∏—Å–∫–ª—é—á–∞—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)
  const isOtherParticipantTyping = React.useMemo(() => {
    if (chat.type !== 'private') {
      return false
    }

    // –ü–æ—Å–∫–æ–ª—å–∫—É —Ç–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∏—Å–∫–ª—é—á–µ–Ω –≤ —Å–µ–ª–µ–∫—Ç–æ—Ä–µ, 
    // –ª—é–±—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤ —Å–ø–∏—Å–∫–µ - —ç—Ç–æ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∏
    const hasTyping = typingUsers.length > 0
    
    // –õ–æ–≥–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –∫–æ–≥–¥–∞ –∫—Ç–æ-—Ç–æ –ø–µ—á–∞—Ç–∞–µ—Ç
    if (hasTyping) {
      console.log(`üéØ [ChatHeader] ‚úÖ –°–û–ë–ï–°–ï–î–ù–ò–ö –ü–ï–ß–ê–¢–ê–ï–¢!`, {
        chatName: chat.name,
        typingUsers: typingUsers
      })
    }
    
    return hasTyping
  }, [chat.type, typingUsers, chat.name, currentUserId])

  return (
    <div className={`p-4 border-b transition-colors duration-300 ${
      callStatus === 'calling' ? '!bg-green-300 dark:!bg-green-700/50' :
      callStatus === 'failed' ? '!bg-red-300 dark:!bg-red-700/50' :
      'bg-card'
    }`}>
      <div className="flex items-center justify-between">
        <div className="flex items-center space-x-3">
          {/* –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥ */}
          <button
            onClick={onBack}
            className="p-1 text-muted-foreground hover:text-foreground rounded transition-colors cursor-pointer"
          >
            <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M15 19l-7-7 7-7" />
            </svg>
          </button>

          {/* –ê–≤–∞—Ç–∞—Ä */}
          <div className="w-10 h-10 rounded-full overflow-hidden bg-muted flex-shrink-0">
            {(chat.avatar_url || chat.other_participant_avatar) ? (
              <img
                src={chat.avatar_url || chat.other_participant_avatar}
                alt={chat.name}
                className="w-full h-full object-cover"
              />
            ) : (
              <div className="w-full h-full bg-gradient-to-br from-blue-500 to-indigo-600 flex items-center justify-center">
                <span className="text-white font-medium text-sm">
                  {chat.name?.charAt(0)?.toUpperCase() || '?'}
                </span>
              </div>
            )}
          </div>

          {/* –ò–º—è */}
          <div>
            <h2 className="font-semibold text-foreground">{chat.name}</h2>
            {chat.type === 'private' && (
              <div className="flex items-center space-x-2">
                {isOtherParticipantTyping ? (
                  // –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø–µ—á–∞—Ç–∞–Ω–∏—è –≤–º–µ—Å—Ç–æ —Å—Ç–∞—Ç—É—Å–∞ - —Ç–æ–ª—å–∫–æ –∫–æ–≥–¥–∞ –ø–µ—á–∞—Ç–∞–µ—Ç —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫
                  <div className="flex items-center space-x-1">
                    <span className="text-xs text-primary italic">
                      –ø–µ—á–∞—Ç–∞–µ—Ç
                    </span>
                    <TypingIndicator
                      size="sm"
                      showText={false}
                      className="scale-75"
                    />
                  </div>
                ) : userStatus ? (
                  // –û–±—ã—á–Ω—ã–π —Å—Ç–∞—Ç—É—Å (–æ–Ω–ª–∞–π–Ω/–æ—Ñ—Ñ–ª–∞–π–Ω)
                  <p className="text-xs text-muted-foreground">
                    {userStatus}
                  </p>
                ) : (
                  // –ù–µ—Ç —Å—Ç–∞—Ç—É—Å–∞
                  <p className="text-xs text-muted-foreground italic">
                    –Ω–µ –≤ —Å–µ—Ç–∏
                  </p>
                )}
              </div>
            )}
          </div>
        </div>

        {/* –ö–Ω–æ–ø–∫–∏ –∑–≤–æ–Ω–∫–∞ */}
        {chat.type === 'private' && chat.other_participant_id && (
          <div className="flex items-center space-x-2">
            {callStatus === 'calling' ? (
              <>
                {/* –ú–æ–±–∏–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è - –∫—Ä—É–≥–ª—ã–µ –∏–∫–æ–Ω–∫–∏ */}
                <button
                  onClick={handleCancelCall}
                  disabled={isCancelling}
                  className="w-10 h-10 bg-red-600 text-white rounded-full flex items-center justify-center hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 cursor-pointer transition-colors disabled:opacity-50 disabled:cursor-not-allowed md:hidden"
                  title={isCancelling ? "–û—Ç–º–µ–Ω–∞..." : "–û—Ç–º–µ–Ω–∏—Ç—å –∑–≤–æ–Ω–æ–∫"}
                >
                  <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"/>
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={3} d="M15 9l6 6m0-6l-6 6"/>
                  </svg>
                </button>
                <button
                  disabled={true}
                  className="w-10 h-10 bg-gray-500 text-white rounded-full flex items-center justify-center cursor-not-allowed transition-colors md:hidden"
                  title="–ó–≤–æ–Ω–∏–º..."
                >
                  <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21L6.16 11.37a11.045 11.045 0 005.516 5.516l1.983-4.064a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z" />
                  </svg>
                </button>

                {/* –î–µ—Å–∫—Ç–æ–ø–Ω–∞—è –≤–µ—Ä—Å–∏—è - –∫–Ω–æ–ø–∫–∏ —Å —Ç–µ–∫—Å—Ç–æ–º */}
                <button
                  onClick={handleCancelCall}
                  disabled={isCancelling}
                  className="hidden md:flex items-center px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 cursor-pointer transition-colors disabled:opacity-50 disabled:cursor-not-allowed"
                >
                  <svg className="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"/>
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={3} d="M15 9l6 6m0-6l-6 6"/>
                  </svg>
                  {isCancelling ? '–û—Ç–º–µ–Ω–∞...' : '–û—Ç–º–µ–Ω–∏—Ç—å'}
                </button>
                <button
                  disabled={true}
                  className="hidden md:flex items-center px-4 py-2 bg-gray-500 text-white rounded-lg cursor-not-allowed transition-colors"
                >
                  <svg className="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21L6.16 11.37a11.045 11.045 0 005.516 5.516l1.983-4.064a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z" />
                  </svg>
                  –ó–≤–æ–Ω–∏–º...
                </button>
              </>
            ) : onCall ? (
              <>
                {/* –ú–æ–±–∏–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è - –∫—Ä—É–≥–ª–∞—è –∏–∫–æ–Ω–∫–∞ */}
                <button
                  onClick={onCall}
                  disabled={isInCall || callStatus === 'failed'}
                  className="w-10 h-10 bg-green-600 text-white rounded-full flex items-center justify-center hover:bg-green-700 dark:bg-green-500 dark:hover:bg-green-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500 disabled:opacity-50 disabled:cursor-not-allowed cursor-pointer transition-colors md:hidden"
                  title="–ü–æ–∑–≤–æ–Ω–∏—Ç—å"
                >
                  <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21L6.16 11.37a11.045 11.045 0 005.516 5.516l1.983-4.064a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z" />
                  </svg>
                </button>

                {/* –î–µ—Å–∫—Ç–æ–ø–Ω–∞—è –≤–µ—Ä—Å–∏—è - –∫–Ω–æ–ø–∫–∞ —Å —Ç–µ–∫—Å—Ç–æ–º */}
                <button
                  onClick={onCall}
                  disabled={isInCall || callStatus === 'failed'}
                  className="hidden md:flex items-center px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 dark:bg-green-500 dark:hover:bg-green-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500 disabled:opacity-50 disabled:cursor-not-allowed cursor-pointer transition-colors"
                >
                  <svg className="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21L6.16 11.37a11.045 11.045 0 005.516 5.516l1.983-4.064a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z" />
                  </svg>
                  –ü–æ–∑–≤–æ–Ω–∏—Ç—å
                </button>
              </>
            ) : null}
          </div>
        )}
      </div>
    </div>
  )
}




