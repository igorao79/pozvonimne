'use client'

import { useState, useRef, useEffect } from 'react'
import useCallStore from '@/store/useCallStore'
import { ringtoneAPI } from '@/config/api'

interface RingtoneSettingsProps {
  onClose: () => void
}

const RingtoneSettings = ({ onClose }: RingtoneSettingsProps) => {
  const [loading, setLoading] = useState(false)
  const [currentRingtone, setCurrentRingtone] = useState<string | null>(null)
  const [error, setError] = useState<string | null>(null)
  const [success, setSuccess] = useState<string | null>(null)
  const [uploadProgress, setUploadProgress] = useState(0)
  
  const fileInputRef = useRef<HTMLInputElement>(null)
  const audioPreviewRef = useRef<HTMLAudioElement>(null)
  const { userId } = useCallStore()

  // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ–∫—É—â–∏–π —Ä–∏–Ω–≥—Ç–æ–Ω –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫
  useEffect(() => {
    const loadCurrentRingtone = async () => {
      if (!userId) return

      try {
        console.log('üîä Loading ringtone for user:', userId)
        const result = await ringtoneAPI.get(userId)
        console.log('üîä Ringtone API result:', result)

        if (result.success && result.url) {
          console.log('üîä Setting ringtone URL:', result.url)
          setCurrentRingtone(result.url)

          // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º src —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –Ω–µ–±–æ–ª—å—à–æ–π –∑–∞–¥–µ—Ä–∂–∫–∏
          setTimeout(() => {
            if (audioPreviewRef.current) {
              console.log('üîä Setting audio src to:', result.url)
              audioPreviewRef.current.src = result.url
            }
          }, 100)
        } else {
          console.log('üîä No ringtone URL in result:', result)
        }
      } catch (err: any) {
        console.error('‚ùå Error loading current ringtone:', err)
        // –ù–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, –µ—Å–ª–∏ —Ä–∏–Ω–≥—Ç–æ–Ω–∞ –ø—Ä–æ—Å—Ç–æ –Ω–µ—Ç
        if (!err.message?.includes('404')) {
          setError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–µ–∫—É—â–µ–≥–æ —Ä–∏–Ω–≥—Ç–æ–Ω–∞')
        }
      }
    }

    loadCurrentRingtone()
  }, [userId])

  const handleFileSelect = async (event: React.ChangeEvent<HTMLInputElement>) => {
    const file = event.target.files?.[0]
    if (!file || !userId) return

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø —Ñ–∞–π–ª–∞
    if (!file.type.startsWith('audio/')) {
      setError('–ú–æ–∂–Ω–æ –∑–∞–≥—Ä—É–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ –∞—É–¥–∏–æ—Ñ–∞–π–ª—ã')
      return
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ (–º–∞–∫—Å–∏–º—É–º 10MB)
    if (file.size > 10 * 1024 * 1024) {
      setError('–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –Ω–µ –¥–æ–ª–∂–µ–Ω –ø—Ä–µ–≤—ã—à–∞—Ç—å 10MB')
      return
    }

    try {
      setLoading(true)
      setError(null)
      setSuccess(null)
      setUploadProgress(0)

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª –Ω–∞ backend
      const result = await ringtoneAPI.upload(userId, file)
      setCurrentRingtone(result.url)
      setSuccess('–†–∏–Ω–≥—Ç–æ–Ω —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω!')
      
      // –í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä
      if (audioPreviewRef.current && result.url) {
        console.log('üîä Setting preview audio src after upload:', result.url)
        audioPreviewRef.current.src = result.url
      }

    } catch (err: any) {
      console.error('Error uploading ringtone:', err)
      setError(err.message || '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ä–∏–Ω–≥—Ç–æ–Ω')
    } finally {
      setLoading(false)
      setUploadProgress(0)
    }
  }

  const handleTestRingtone = async () => {
    console.log('üéµ handleTestRingtone called')
    console.log('üéµ currentRingtone:', currentRingtone)
    console.log('üéµ audioPreviewRef.current:', audioPreviewRef.current)

    if (!audioPreviewRef.current) {
      console.error('‚ùå Audio element not found')
      setError('–ê—É–¥–∏–æ —ç–ª–µ–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω')
      return
    }

    if (!currentRingtone) {
      console.error('‚ùå No ringtone URL')
      setError('–†–∏–Ω–≥—Ç–æ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω')
      return
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å URL
    try {
      new URL(currentRingtone)
    } catch (e) {
      console.error('‚ùå Invalid URL:', currentRingtone)
      setError('–ù–µ–≤–µ—Ä–Ω—ã–π URL —Ä–∏–Ω–≥—Ç–æ–Ω–∞')
      return
    }

    try {
      setError(null)

      // –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ —Å—Å—ã–ª–æ–∫
      if (currentRingtone.includes('mega.nz')) {
        console.log('üîç Mega.nz URL detected, skipping availability check')
      } else if (currentRingtone.includes('idrivee2') || currentRingtone.includes('X-Amz-')) {
        console.log('üîç IDrive E2 / S3 signed URL detected, skipping HEAD check')
        // –î–ª—è signed URLs –ø—Ä–æ–ø—É—Å–∫–∞–µ–º HEAD –ø—Ä–æ–≤–µ—Ä–∫—É, —Ç–∞–∫ –∫–∞–∫ –æ–Ω–∏ —á–∞—Å—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç 403
      } else {
        console.log('üîç Checking file availability...')
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Ñ–∞–π–ª–∞ –ø–µ—Ä–µ–¥ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ–º
        const response = await fetch(currentRingtone, { method: 'HEAD' })
        console.log('üîç File check response:', response.status)

        if (!response.ok) {
          throw new Error(`–§–∞–π–ª –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: ${response.status}`)
        }

        const contentType = response.headers.get('content-type')
        console.log('üîç Audio file content-type:', contentType)
      }

      // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π src
      audioPreviewRef.current.src = ''
      audioPreviewRef.current.load()

      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫
      console.log('üîÑ Setting audio src...')

      // –î–ª—è Mega.nz —Å—Å—ã–ª–æ–∫ –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ—Ç–æ–∫–æ–≤–æ–µ API
      let audioSrc = currentRingtone
      if (currentRingtone.includes('mega.nz')) {
        console.log('üîÑ Processing Mega.nz URL via streaming API...')
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∞—à API endpoint –¥–ª—è –ø–æ—Ç–æ–∫–æ–≤–æ–≥–æ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è
        const encodedUrl = encodeURIComponent(currentRingtone)
        audioSrc = `/api/ringtones/${userId}?action=stream&url=${encodedUrl}`
        console.log('üîÑ Using streaming URL:', audioSrc)
      }

      audioPreviewRef.current.src = audioSrc
      audioPreviewRef.current.preload = 'metadata'

      // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö
      console.log('‚è≥ Waiting for metadata...')
      await new Promise((resolve, reject) => {
        const onLoadedMetadata = () => {
          console.log('‚úÖ Metadata loaded successfully')
          audioPreviewRef.current?.removeEventListener('loadedmetadata', onLoadedMetadata)
          audioPreviewRef.current?.removeEventListener('error', onError)
          resolve(void 0)
        }

        const onError = (e: any) => {
          console.error('‚ùå Audio load error:', e)
          audioPreviewRef.current?.removeEventListener('loadedmetadata', onLoadedMetadata)
          audioPreviewRef.current?.removeEventListener('error', onError)
          reject(new Error(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞—É–¥–∏–æ: ${e.target?.error?.code || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`))
        }

        audioPreviewRef.current?.addEventListener('loadedmetadata', onLoadedMetadata)
        audioPreviewRef.current?.addEventListener('error', onError)

        // –¢–∞–π–º–∞—É—Ç –Ω–∞ –∑–∞–≥—Ä—É–∑–∫—É
        setTimeout(() => {
          console.error('‚è∞ Timeout waiting for metadata')
          audioPreviewRef.current?.removeEventListener('loadedmetadata', onLoadedMetadata)
          audioPreviewRef.current?.removeEventListener('error', onError)
          reject(new Error('–¢–∞–π–º–∞—É—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –∞—É–¥–∏–æ'))
        }, 10000)
      })

      // –í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º
      console.log('‚ñ∂Ô∏è Starting playback...')
      await audioPreviewRef.current.play()
      console.log('‚úÖ Playback started successfully')

    } catch (err: any) {
      console.error('‚ùå Error playing ringtone:', err)

      if (err.name === 'NotSupportedError') {
        if (currentRingtone.includes('mega.nz')) {
          setError('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ Mega.nz —Ñ–∞–π–ª. –í–æ–∑–º–æ–∂–Ω–æ, megatools –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –∏–ª–∏ —Å—Å—ã–ª–∫–∞ –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞.')
        } else {
          setError('–§–æ—Ä–º–∞—Ç —Ä–∏–Ω–≥—Ç–æ–Ω–∞ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –±—Ä–∞—É–∑–µ—Ä–æ–º. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Ñ–∞–π–ª –≤ MP3.')
        }
      } else if (err.message.includes('DEMUXER_ERROR_COULD_NOT_OPEN')) {
        setError('‚ùå –§–∞–π–ª –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω. –í–æ–∑–º–æ–∂–Ω–æ, —Å—Å—ã–ª–∫–∞ Mega.nz —Ç—Ä–µ–±—É–µ—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏.')
      } else if (err.name === 'NotAllowedError') {
        setError('–ë—Ä–∞—É–∑–µ—Ä –±–ª–æ–∫–∏—Ä—É–µ—Ç –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –¥–ª—è —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è.')
      } else if (err.message.includes('CORS')) {
        setError('–ü—Ä–æ–±–ª–µ–º–∞ —Å CORS. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞.')
      } else if (err.message.includes('NetworkError') || err.message.includes('Failed to fetch')) {
        setError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ.')
      } else if (err.message.includes('403') && currentRingtone.includes('idrivee2')) {
        setError('‚ö†Ô∏è IDrive E2 signed URL –º–æ–∂–µ—Ç –±—ã—Ç—å –∏—Å—Ç–µ–∫—à–∏–º. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É.')
      } else {
        setError(`–ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏: ${err.message}`)
      }
    }
  }

  const handleRemoveRingtone = async () => {
    if (!userId) return

    try {
      setLoading(true)
      setError(null)

      await ringtoneAPI.remove(userId)

      console.log('üóëÔ∏è Ringtone removed, clearing state')
      setCurrentRingtone(null)
      setSuccess('–†–∏–Ω–≥—Ç–æ–Ω —É–¥–∞–ª–µ–Ω. –ë—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –∑–≤–æ–Ω–æ–∫.')

      if (audioPreviewRef.current) {
        console.log('üóëÔ∏è Clearing audio src')
        audioPreviewRef.current.src = ''
        audioPreviewRef.current.load() // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç
      }

    } catch (err: any) {
      console.error('Error removing ringtone:', err)
      setError(err.message || '–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Ä–∏–Ω–≥—Ç–æ–Ω')
    } finally {
      setLoading(false)
    }
  }

  const handleStopPreview = () => {
    if (audioPreviewRef.current) {
      audioPreviewRef.current.pause()
      audioPreviewRef.current.currentTime = 0
    }
  }

  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4">
      <div className="bg-white rounded-lg max-w-md w-full max-h-[90vh] overflow-y-auto">
        <div className="p-6">
          {/* Header */}
          <div className="flex items-center justify-between mb-6">
            <h2 className="text-2xl font-bold text-gray-900">–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–∏–Ω–≥—Ç–æ–Ω–∞</h2>
            <button
              onClick={onClose}
              className="text-gray-400 hover:text-gray-600"
            >
              <svg className="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />
              </svg>
            </button>
          </div>

          {/* Messages */}
          {error && (
            <div className="mb-4 bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded">
              {error}
            </div>
          )}
          {success && (
            <div className="mb-4 bg-green-50 border border-green-200 text-green-700 px-4 py-3 rounded">
              {success}
            </div>
          )}

          {/* Progress bar */}
          {loading && uploadProgress > 0 && (
            <div className="mb-4">
              <div className="flex justify-between text-sm text-gray-600 mb-1">
                <span>–ó–∞–≥—Ä—É–∑–∫–∞...</span>
                <span>{uploadProgress}%</span>
              </div>
              <div className="w-full bg-gray-200 rounded-full h-2">
                <div 
                  className="bg-blue-600 h-2 rounded-full transition-all duration-300"
                  style={{ width: `${uploadProgress}%` }}
                ></div>
              </div>
            </div>
          )}

          {/* Current ringtone */}
          <div className="mb-6">
            <h3 className="text-lg font-semibold text-gray-900 mb-3">–¢–µ–∫—É—â–∏–π —Ä–∏–Ω–≥—Ç–æ–Ω</h3>
            {(() => {
              console.log('üéµ Render: currentRingtone =', currentRingtone)
              return null
            })()}
            {currentRingtone ? (
              <div className="bg-gray-50 rounded-lg p-4">
                <div className="flex items-center justify-between mb-3">
                  <span className="text-sm text-gray-600">–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π —Ä–∏–Ω–≥—Ç–æ–Ω</span>
                  <button
                    onClick={handleRemoveRingtone}
                    disabled={loading}
                    className="text-red-600 hover:text-red-800 text-sm disabled:opacity-50"
                  >
                    –£–¥–∞–ª–∏—Ç—å
                  </button>
                </div>
                <div className="flex space-x-2">
                  <button
                    onClick={handleTestRingtone}
                    disabled={loading}
                    className="flex-1 bg-blue-600 text-white py-2 px-4 rounded hover:bg-blue-700 disabled:opacity-50 text-sm"
                  >
                    ‚ñ∂ –ü—Ä–æ—Å–ª—É—à–∞—Ç—å
                  </button>
                  <button
                    onClick={handleStopPreview}
                    className="bg-gray-600 text-white py-2 px-4 rounded hover:bg-gray-700 text-sm"
                  >
                    ‚èπ –°—Ç–æ–ø
                  </button>
                </div>
              </div>
            ) : (
              <div className="bg-gray-50 rounded-lg p-4">
                <span className="text-sm text-gray-600">–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ä–∏–Ω–≥—Ç–æ–Ω</span>
              </div>
            )}
          </div>

          {/* Upload section */}
          <div className="mb-6">
            <h3 className="text-lg font-semibold text-gray-900 mb-3">–ó–∞–≥—Ä—É–∑–∏—Ç—å –Ω–æ–≤—ã–π —Ä–∏–Ω–≥—Ç–æ–Ω</h3>
            
            <input
              ref={fileInputRef}
              type="file"
              accept="audio/*"
              onChange={handleFileSelect}
              className="hidden"
            />

            <button
              onClick={() => fileInputRef.current?.click()}
              disabled={loading}
              className="w-full border-2 border-dashed border-gray-300 rounded-lg p-6 text-center hover:border-blue-500 hover:bg-blue-50 transition-colors disabled:opacity-50"
            >
              <div className="flex flex-col items-center">
                <svg className="w-12 h-12 text-gray-400 mb-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12" />
                </svg>
                <p className="text-sm text-gray-600">
                  {loading ? '–ó–∞–≥—Ä—É–∑–∫–∞...' : '–ù–∞–∂–º–∏—Ç–µ —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å –∞—É–¥–∏–æ—Ñ–∞–π–ª'}
                </p>
                <p className="text-xs text-gray-500 mt-1">
                  MP3, WAV, OGG (–º–∞–∫—Å–∏–º—É–º 10MB)
                </p>
              </div>
            </button>
          </div>

          {/* Info */}
          <div className="bg-blue-50 rounded-lg p-4">
            <h4 className="font-semibold text-blue-900 mb-2">üí° –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h4>
            <ul className="text-sm text-blue-800 space-y-1">
              <li>‚Ä¢ –†–∏–Ω–≥—Ç–æ–Ω –±—É–¥–µ—Ç –∏–≥—Ä–∞—Ç—å –ø—Ä–∏ –≤—Ö–æ–¥—è—â–∏—Ö –∑–≤–æ–Ω–∫–∞—Ö</li>
              <li>‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ñ–æ—Ä–º–∞—Ç—ã: MP3, WAV, OGG</li>
              <li>‚Ä¢ –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–∞—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: 10-30 —Å–µ–∫—É–Ω–¥</li>
              <li>‚Ä¢ –ü—Ä–∏ –∑–∞–º–µ–Ω–µ —Å—Ç–∞—Ä—ã–π —Ä–∏–Ω–≥—Ç–æ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–¥–∞–ª—è–µ—Ç—Å—è</li>
              <li>‚Ä¢ <strong>Mega.nz —Å—Å—ã–ª–∫–∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è</strong> —á–µ—Ä–µ–∑ –ø–æ—Ç–æ–∫–æ–≤–æ–µ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ</li>
              <li>‚Ä¢ <strong>IDrive E2 —Å—Å—ã–ª–∫–∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è</strong> –Ω–∞–ø—Ä—è–º—É—é</li>
            </ul>
          </div>

          {/* Cloud storage status */}
          {currentRingtone?.includes('mega.nz') && (
            <div className="bg-blue-50 rounded-lg p-4 mt-4 border border-blue-200">
              <h4 className="font-semibold text-blue-900 mb-2">üîÑ Mega.nz: –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø–æ—Ç–æ–∫–æ–≤–æ–µ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ</h4>
              <div className="text-sm text-blue-800 space-y-2">
                <p><strong>–°—Ç–∞—Ç—É—Å:</strong> –§–∞–π–ª –±—É–¥–µ—Ç –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–µ—Ä —Å –ø–æ–º–æ—â—å—é megatools.</p>
                <p className="mt-2"><strong>–¢–µ–∫—É—â–∞—è —Å—Å—ã–ª–∫–∞:</strong></p>
                <code className="bg-blue-100 p-2 rounded text-xs block break-all">
                  {currentRingtone}
                </code>
                <p className="mt-2 text-xs bg-yellow-100 p-2 rounded">
                  ‚ö†Ô∏è <strong>–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:</strong> –ù–∞ —Å–µ—Ä–≤–µ—Ä–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω megatools –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Mega.nz —Ñ–∞–π–ª–∞–º–∏
                </p>
              </div>
            </div>
          )}

          {currentRingtone?.includes('idrivee2') && (
            <div className="bg-green-50 rounded-lg p-4 mt-4 border border-green-200">
              <h4 className="font-semibold text-green-900 mb-2">‚úÖ IDrive E2: –ü—Ä—è–º–∞—è —Å—Å—ã–ª–∫–∞</h4>
              <div className="text-sm text-green-800 space-y-2">
                <p><strong>–°—Ç–∞—Ç—É—Å:</strong> –§–∞–π–ª –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –ø—Ä—è–º–æ–π signed URL.</p>
                <p className="mt-2"><strong>–¢–µ–∫—É—â–∞—è —Å—Å—ã–ª–∫–∞:</strong></p>
                <code className="bg-green-100 p-2 rounded text-xs block break-all">
                  {currentRingtone}
                </code>
                <p className="mt-2 text-xs bg-blue-100 p-2 rounded">
                  ‚ÑπÔ∏è <strong>–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ:</strong> Signed URLs –∏–º–µ—é—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è –∂–∏–∑–Ω–∏ (–æ–±—ã—á–Ω–æ 1 —á–∞—Å)
                </p>
                <div className="mt-2">
                  <button
                    onClick={() => window.location.reload()}
                    className="bg-blue-600 text-white px-3 py-1 rounded text-xs hover:bg-blue-700 transition-colors"
                  >
                    üîÑ –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –Ω–æ–≤–æ–≥–æ URL
                  </button>
                </div>
              </div>
            </div>
          )}

          {/* Setup warning */}
          <div className="bg-yellow-50 rounded-lg p-4 mt-4">
            <h4 className="font-semibold text-yellow-900 mb-2">‚ö†Ô∏è –ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞</h4>
            <div className="text-sm text-yellow-800 space-y-1">
              <p>–î–ª—è —Ä–∞–±–æ—Ç—ã —Ä–∏–Ω–≥—Ç–æ–Ω–æ–≤ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ:</p>
              <ol className="list-decimal list-inside space-y-1 mt-2">
                <li>–°–æ–∑–¥–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç –Ω–∞ <a href="https://mega.nz" target="_blank" rel="noopener noreferrer" className="underline">mega.nz</a> (–±–µ—Å–ø–ª–∞—Ç–Ω–æ)</li>
                <li>–°–æ–∑–¥–∞—Ç—å —Ñ–∞–π–ª <code className="bg-yellow-200 px-1 rounded">.env.local</code> –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞</li>
                <li>–î–æ–±–∞–≤–∏—Ç—å –≤ –Ω–µ–≥–æ –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ Mega.nz:</li>
              </ol>
              <pre className="bg-yellow-200 text-yellow-900 p-2 rounded mt-2 text-xs">
{`MEGA_EMAIL=your_email@example.com
MEGA_PASSWORD=your_password`}
              </pre>
              <p className="mt-2">–ü–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏.</p>
            </div>
          </div>

          {/* Hidden audio element for preview */}
          <audio
            ref={audioPreviewRef}
            loop={false}
            preload="none"
            crossOrigin="anonymous"
            onError={(e) => {
              console.error('Audio element error:', e)
              const target = e.target as HTMLAudioElement
              if (target?.error) {
                console.error('Audio error code:', target.error.code)
                console.error('Audio error message:', target.error.message)
              }
            }}
          />
        </div>
      </div>
    </div>
  )
}

export default RingtoneSettings
