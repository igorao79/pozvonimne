'use client'

import { useEffect, useState, useCallback } from 'react'
import { createClient } from '@/utils/supabase/client'
import { User } from '@supabase/supabase-js'

interface UserProfile {
  id: string
  username: string
  display_name: string
  avatar_url?: string
  last_seen: string | null
  status?: string
}

export const useUsers = () => {
  const [users, setUsers] = useState<UserProfile[]>([])
  const [loading, setLoading] = useState(true)
  const [error, setError] = useState<string | null>(null)

  const supabase = createClient()

  // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const getCurrentUser = async () => {
    const { data: { user } } = await supabase.auth.getUser()
    return user?.id
  }

  const fetchUsers = useCallback(async () => {
    try {
      setLoading(true)
      setError(null)

      console.log('üîÑ –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...')

      // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const { data: { user: currentUser } } = await supabase.auth.getUser()
      console.log('üë§ –¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', currentUser?.id)

      // –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å —Ä–µ–∞–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —á–µ—Ä–µ–∑ RPC —Ñ—É–Ω–∫—Ü–∏—é
      const { data, error } = await supabase.rpc('get_users_with_profiles')

      if (error) {
        console.warn('RPC —Ñ—É–Ω–∫—Ü–∏—è get_users_with_profiles –Ω–µ –Ω–∞–π–¥–µ–Ω–∞:', error.message)

        // Fallback: –ø—Ä–æ–±—É–µ–º –±–∞–∑–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é get_users_list
        const { data: basicData, error: basicError } = await supabase.rpc('get_users_list')

        if (basicError) {
          console.warn('RPC —Ñ—É–Ω–∫—Ü–∏—è get_users_list –Ω–µ –Ω–∞–π–¥–µ–Ω–∞:', basicError.message)
          throw new Error('–§—É–Ω–∫—Ü–∏–∏ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã. –í—ã–ø–æ–ª–Ω–∏—Ç–µ SQL —Å–∫—Ä–∏–ø—Ç –∏–∑ —Ñ–∞–π–ª–∞ supabase_setup.sql')
        }

        console.log('üìä –ü–æ–ª—É—á–µ–Ω—ã –±–∞–∑–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', basicData?.length || 0)
        console.log('üë• –î–µ—Ç–∞–ª–∏ –±–∞–∑–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', basicData?.map((u: any) => ({
          id: u.id?.substring(0, 8),
          email: u.email,
          created_at: u.created_at,
          last_sign_in_at: u.last_sign_in_at
        })))
        setUsers(basicData || [])
      } else {
        console.log('üìä –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –ø—Ä–æ—Ñ–∏–ª—è–º–∏:', data?.length || 0)
        console.log('üë• –°—ã—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:')
        data?.forEach((u: any, index: number) => {
          console.log(`   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${index + 1}:`, {
            id: u.id?.substring(0, 8),
            username: u.username,
            display_name: u.display_name,
            avatar_url: u.avatar_url,
            status: u.status,
            last_seen: u.last_seen,
            created_at: u.created_at,
            last_sign_in_at: u.last_sign_in_at,
            last_seen_type: typeof u.last_seen
          })
        })

        // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ —Å –ø—Ä–æ—Ñ–∏–ª—è–º–∏ –≤ –±–∞–∑–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç
        const usersData: UserProfile[] = (data || []).map((user: any) => {
          console.log('üîß –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', user.id?.substring(0, 8), {
            last_seen_raw: user.last_seen,
            last_seen_type: typeof user.last_seen,
            status: user.status
          })

          return {
            id: user.id,
            username: user.username,
            display_name: user.display_name,
            avatar_url: user.avatar_url,
            last_seen: user.last_seen,
            status: user.status
          }
        })

        console.log('üîÑ –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', usersData.length)
        console.log('üë• –î–µ—Ç–∞–ª–∏ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:')
        usersData.forEach((u, index) => {
          console.log(`   –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${index + 1}:`, {
            id: u.id.substring(0, 8),
            username: u.username,
            display_name: u.display_name,
            avatar_url: u.avatar_url,
            status: u.status,
            last_seen: u.last_seen
          })
        })
        setUsers(usersData)
      }

    } catch (err: any) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', err)
      setError(err.message)
      setUsers([])
    } finally {
      setLoading(false)
    }
  }, [supabase])

  useEffect(() => {
    fetchUsers()

    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const updateLastSeen = async () => {
      try {
        console.log('üü¢ –í—ã–∑—ã–≤–∞–µ–º update_user_last_seen')
        const result = await supabase.rpc('update_user_last_seen')
        console.log('‚úÖ update_user_last_seen –≤—ã–ø–æ–ª–Ω–µ–Ω:', result)

        // –ü–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞, –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        setTimeout(() => {
          console.log('üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞')
          fetchUsers()
        }, 1000)

      } catch (err) {
        console.error('‚ùå –û—à–∏–±–∫–∞ update_user_last_seen:', err)
      }
    }

    // Heartbeat –º–µ—Ö–∞–Ω–∏–∑–º –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    const heartbeat = async () => {
      try {
        console.log('üíì Heartbeat: –æ–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')

        // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const currentUserId = await getCurrentUser()

        if (!currentUserId) {
          console.log('‚ùå –¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω')
          return
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –æ–±–Ω–æ–≤–ª—è—Ç—å —Å—Ç–∞—Ç—É—Å
        const { data: userData } = await supabase
          .from('user_profiles')
          .select('last_seen, status')
          .eq('id', currentUserId)
          .single()

        if (userData) {
          const timeSinceLastSeen = Date.now() - new Date(userData.last_seen).getTime()
          console.log(`‚è∞ –í—Ä–µ–º—è —Å –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ø–æ—Å–µ—â–µ–Ω–∏—è: ${Math.round(timeSinceLastSeen / 1000)} —Å–µ–∫`)

          // –ï—Å–ª–∏ –ø—Ä–æ—à–ª–æ –±–æ–ª–µ–µ 25 —Å–µ–∫—É–Ω–¥, –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
          if (timeSinceLastSeen > 25000) {
            console.log('üîÑ –í—Ä–µ–º—è –æ–±–Ω–æ–≤–ª—è—Ç—å —Å—Ç–∞—Ç—É—Å')
            await updateLastSeen()
          } else {
            console.log('‚úÖ –°—Ç–∞—Ç—É—Å –µ—â–µ —Å–≤–µ–∂–∏–π, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ')
          }
        } else {
          await updateLastSeen()
        }
      } catch (err) {
        console.error('‚ùå –û—à–∏–±–∫–∞ heartbeat:', err)
      }
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –æ—Ñ—Ñ–ª–∞–π–Ω
    const setOffline = async () => {
      try {
        console.log('üî¥ –í—ã–∑—ã–≤–∞–µ–º set_user_offline')
        const result = await supabase.rpc('set_user_offline')
        console.log('‚úÖ set_user_offline –≤—ã–ø–æ–ª–Ω–µ–Ω:', result)
      } catch (err) {
        console.error('‚ùå –û—à–∏–±–∫–∞ set_user_offline:', err)
      }
    }


    updateLastSeen()

    // Heartbeat –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥ –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –æ–Ω–ª–∞–π–Ω
    const heartbeatInterval = setInterval(heartbeat, 30 * 1000)

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∫–∞–∂–¥—ã–µ 15 —Å–µ–∫—É–Ω–¥
    const fetchInterval = setInterval(() => {
      fetchUsers()
    }, 15 * 1000)

    // –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–∞–π–º–µ—Ä–æ–≤
    let inactivityTimer: NodeJS.Timeout | null = null
    let currentHeartbeatInterval: NodeJS.Timeout | null = null

    // –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è heartbeat
    const startHeartbeat = () => {
      if (currentHeartbeatInterval) clearInterval(currentHeartbeatInterval)
      currentHeartbeatInterval = setInterval(heartbeat, 30 * 1000)
      console.log('üöÄ Heartbeat –∑–∞–ø—É—â–µ–Ω')
    }

    const stopHeartbeat = () => {
      if (currentHeartbeatInterval) {
        clearInterval(currentHeartbeatInterval)
        currentHeartbeatInterval = null
        console.log('‚è∏Ô∏è Heartbeat –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')
      }
    }

    // –ó–∞–ø—É—Å–∫–∞–µ–º heartbeat
    startHeartbeat()

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤–∏–¥–∏–º–æ—Å—Ç–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    const handleVisibilityChange = async () => {
      if (document.hidden) {
        console.log('üëÅÔ∏è –í–∫–ª–∞–¥–∫–∞ —Å—Ç–∞–ª–∞ –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ–π, document.hidden =', document.hidden)

        // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º heartbeat –ø—Ä–∏ –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
        stopHeartbeat()

        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–∞–π–º–µ—Ä –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ—Ñ—Ñ–ª–∞–π–Ω —á–µ—Ä–µ–∑ 30 —Å–µ–∫—É–Ω–¥ –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
        inactivityTimer = setTimeout(() => {
          if (document.hidden) {
            console.log('‚è∞ –í–∫–ª–∞–¥–∫–∞ –Ω–µ–∞–∫—Ç–∏–≤–Ω–∞ –±–æ–ª–µ–µ 30 —Å–µ–∫—É–Ω–¥, –≤—ã–∑—ã–≤–∞–µ–º setOffline')
            setOffline()
          } else {
            console.log('‚úÖ –í–∫–ª–∞–¥–∫–∞ —Å–Ω–æ–≤–∞ –∞–∫—Ç–∏–≤–Ω–∞, –æ—Ç–º–µ–Ω—è–µ–º setOffline')
          }
        }, 30 * 1000) // 30 —Å–µ–∫—É–Ω–¥ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –æ—Ñ—Ñ–ª–∞–π–Ω
      } else {
        console.log('üëÅÔ∏è –í–∫–ª–∞–¥–∫–∞ —Å—Ç–∞–ª–∞ –∞–∫—Ç–∏–≤–Ω–æ–π, document.hidden =', document.hidden)

        // –û—á–∏—â–∞–µ–º —Ç–∞–π–º–µ—Ä –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
        if (inactivityTimer) {
          clearTimeout(inactivityTimer)
          inactivityTimer = null
        }

        // –ó–∞–ø—É—Å–∫–∞–µ–º heartbeat –∑–∞–Ω–æ–≤–æ
        startHeartbeat()

        // –ù–µ–º–µ–¥–ª–µ–Ω–Ω–æ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
        setTimeout(() => {
          console.log('üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏')
          fetchUsers()
        }, 200)
      }
    }

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–∫—Ä—ã—Ç–∏—è –≤–∫–ª–∞–¥–∫–∏
    const handleBeforeUnload = () => {
      console.log('üö™ –í–∫–ª–∞–¥–∫–∞ –∑–∞–∫—Ä—ã–≤–∞–µ—Ç—Å—è, –≤—ã–∑—ã–≤–∞–µ–º setOffline')
      // –°–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –≤—ã–∑–æ–≤ –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏
      try {
        supabase.rpc('set_user_offline').then(() => {
          console.log('‚úÖ –û—Ñ–ª–∞–π–Ω —Å—Ç–∞—Ç—É—Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –≤–∫–ª–∞–¥–∫–∏')
        })
      } catch (err) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –æ—Ñ–ª–∞–π–Ω –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏:', err)
      }
    }

    // –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–¥–≤–∏–∂–µ–Ω–∏–µ –º—ã—à–∏, –∫–ª–∏–∫–∏, –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞)
    let lastActivity = Date.now()
    const updateActivity = () => {
      lastActivity = Date.now()
    }

    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    document.addEventListener('mousedown', updateActivity)
    document.addEventListener('keydown', updateActivity)
    document.addEventListener('scroll', updateActivity)

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∫–∞–∂–¥—ã–µ 10 —Å–µ–∫—É–Ω–¥
    const activityCheckInterval = setInterval(() => {
      const now = Date.now()
      const inactiveTime = now - lastActivity

      // –ï—Å–ª–∏ –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω –±–æ–ª–µ–µ 2 –º–∏–Ω—É—Ç, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –æ—Ñ—Ñ–ª–∞–π–Ω
      if (inactiveTime > 2 * 60 * 1000) {
        console.log('üò¥ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω –±–æ–ª–µ–µ 2 –º–∏–Ω—É—Ç, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ñ—Ñ–ª–∞–π–Ω')
        setOffline()
      }
    }, 10 * 1000)

    document.addEventListener('visibilitychange', handleVisibilityChange)
    window.addEventListener('beforeunload', handleBeforeUnload)

    return () => {
      clearInterval(heartbeatInterval)
      clearInterval(fetchInterval)
      clearInterval(activityCheckInterval)
      if (inactivityTimer) {
        clearTimeout(inactivityTimer)
      }
      document.removeEventListener('visibilitychange', handleVisibilityChange)
      document.removeEventListener('beforeunload', handleBeforeUnload)
      document.removeEventListener('mousedown', updateActivity)
      document.removeEventListener('keydown', updateActivity)
      document.removeEventListener('scroll', updateActivity)
      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ñ—Ñ–ª–∞–π–Ω –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
      setOffline()
    }
  }, [fetchUsers])

  const refreshUsers = () => {
    fetchUsers()
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤—Å–µ—Ö –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  const forceUpdateInactiveUsers = async () => {
    try {
      console.log('üîß –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π')
      const result = await supabase.rpc('force_update_inactive_users')
      console.log('‚úÖ force_update_inactive_users –≤—ã–ø–æ–ª–Ω–µ–Ω:', result)

      // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
      setTimeout(() => {
        fetchUsers()
      }, 500)

      return result
    } catch (err) {
      console.error('‚ùå –û—à–∏–±–∫–∞ force_update_inactive_users:', err)
      return null
    }
  }

  // Realtime –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  useEffect(() => {
    console.log('üì° –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º realtime –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π')

    const channel = supabase
      .channel('user_profiles_changes')
      .on(
        'postgres_changes',
        {
          event: '*',
          schema: 'public',
          table: 'user_profiles'
        },
        (payload) => {
          console.log('üîÑ –ò–∑–º–µ–Ω–µ–Ω–∏–µ –≤ user_profiles:', payload)

          // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—Ä–∏ –ª—é–±–æ–º –∏–∑–º–µ–Ω–µ–Ω–∏–∏
          fetchUsers()
        }
      )
      .subscribe((status) => {
        console.log('üì° –°—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏ user_profiles_changes:', status)
      })

    return () => {
      console.log('üîå –û—Ç–ø–∏—Å—ã–≤–∞–µ–º—Å—è –æ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π user_profiles')
      supabase.removeChannel(channel)
    }
  }, [fetchUsers])

  return { users, loading, error, refreshUsers, forceUpdateInactiveUsers }
}

export default useUsers
